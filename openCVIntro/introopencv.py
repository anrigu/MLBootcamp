# -*- coding: utf-8 -*-
"""IntroOpenCV

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1eekb4H00iNaHXi_6OAwyELcdi64wWaNm

# Introduction to OpenCV

### Welcome to the interesting tutorial. I'll be doing a short intro into OpenCV and gaining access to your webcam!

_**Important note. Run the following code in Pycharm or your local environment. Google Colab doesn't support video capture and access to webcams (there are ways to workaround this but it's not worth learning because we likely won't be working in Google Colab anyway.)**_
"""

#After you install OpenCV-python into Pycharm, you'll gain access to a library called cv2.
import cv2
import numpy as np
# The parameter (0 in this case) represents which webcam you want to connect to. WRITE 0 in cases where you only have one webcam (which is most situations)
# If you had more than one webcam connected, you could use 1, 2, 3 etc. to access each one.
# You could also put a path to a video in the parameters. For example './funnyvideo.mp4'

cap = cv2.VideoCapture(0)
width = int(cap.get(3))
height = int(cap.get(4))

#Infinite loop to continue keeping the connection to the webcam open
while True:
    #Success = whether or not data read is successful
    #Image = the frame that's captured
    success, img = cap.read()
    cv2.imshow("Video", img)
    image = np.zeros(img.shape, np.uint8)
    #Essentially splits the image frame into 4 boxes
    smaller_frame = cv2.resize(img, (0, 0), fx=0.5, fy=0.5)
    #The // means INTEGER DIVISION. Essentially it rounds down to keep numbers as integers. 5 // 2 = 2
    image[:height // 2, :width // 2] = smaller_frame
    image[height // 2:, :width // 2] = smaller_frame
    image[:height // 2, width // 2:] = smaller_frame
    image[height // 2:, width // 2:] = smaller_frame

    cv2.imshow('frame', image)
    #Essentially, if you press q, the loop will break and the video capture will end.
    if cv2.waitKey(1) == ord('q'):
        break
#Releases camera to be used by other applications
cap.release()